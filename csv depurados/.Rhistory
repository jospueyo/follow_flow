??t
??student
p <- c(5688, 5575)
t.test(p, paired = FALSE)
t.test(p, paired = FALSE, mu = 5631.5)
?boxplot
library(sf)
#setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos')
dir <- "C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos"
ff <- list.files(dir, pattern="\\.shp$", full.names=TRUE)
print(ff)
for (shp in ff){
object <- st_read(shp)
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
print(shapefile)
assign(shapefile, object)
}
View(`0_ben_exp_bio`)
View(`0_ben_exp_bio`)
for (shp in ff){
object <- st_read(shp)
object$id <- as.integer(object$id)
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
print(shapefile)
assign(shapefile, object)
}
for (shp in ff){
object <- st_read(shp)
object$id <- c(1:nrow(object))
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
print(shapefile)
assign(shapefile, object)
}
View(`6_r_ben_enp_bio`)
View(`6_r_ben_enp_bio`)
class(ff)
view(ff)
head(ff)
class(`0_vul_exp_bio`)
View(`9_sum_urb_estetic`)
origins <- 1
i <- 1
for (shp in ff){
object <- st_read(shp)
object$id <- c(1:nrow(object))
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
origins[i] <- shapefile
i <- i+1
assign(shapefile, object)
}
print(origins)
library(stringr)
install.packages('stringr')
library(stringr)
if grepl("as","a"){
print(funciona)
}
if grepl("as","a")=TRUE{
print(funciona)
}
if (grepl("as","a")=TRUE){
print('funciona')
}
if (grepl("as","a")=TRUE){
print('funciona')
}
if (grepl("as","b")=TRUE){
print('funciona')
}
grepl('as','a')
grepl('a','as')
if (grepl('a','as')=TRUE){
print('funciona')
}
if (grepl('b','as')=TRUE){
print('funciona')
}
if (grepl('b','as')){
print('funciona')
}
if (grepl('a','as')){
print('funciona')
}
if (grepl('a','as')){
print('2 conté 1')
} else{
print('2 no conté 1')
}
if (grepl('b','as')){
print('2 conté 1')
} else{
print('2 no conté 1')
}
origins <- 1
i <- 1
for (shp in ff){
#carreguem el shape
object <- st_read(shp)
#creem un camp únic numèric
object$id <- c(1:nrow(object))
#arreglem el nom de shp i l'assignem a l'objecte
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, object)
#si el shp és de beneficiaris, l'afegim a un vector
if (grepl('ben',shapefile)){
origin[i] <- shapefile
}
}
print(origins)
origins <- 1
i <- 1
for (shp in ff){
#carreguem el shape
object <- st_read(shp)
#creem un camp únic numèric
object$id <- c(1:nrow(object))
#arreglem el nom de shp i l'assignem a l'objecte
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, object)
#si el shp és de beneficiaris, l'afegim a un vector
if (grepl('ben',shapefile)){
origins[i] <- shapefile
}
}
print(origins)
origins <- 1
i <- 1
for (shp in ff){
#carreguem el shape
object <- st_read(shp)
#creem un camp únic numèric
object$id <- c(1:nrow(object))
#arreglem el nom de shp i l'assignem a l'objecte
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, object)
#si el shp és de beneficiaris, l'afegim a un vector
if (grepl('ben',shapefile)){
origins[i] <- shapefile
i <- i+1
}
}
print(origins)
hub <- gsub("ben","sum",`0_ben_exp_cons_hum`)
print(hub)
for (shp in origins){
#generem el nom del nub
hub <- gsub("ben","sum",shp)ç
print(hub)
}
for (shp in origins){
#generem el nom del nub
hub <- gsub("ben","sum",shp)
print(hub)
}
for (ben in origins){
#generem el nom del nub
hub <- gsub("ben","sum",ben)
print(hub)
hubname <- st_nearest_feature(ben,hub)
ben$hubname <- hubname
}
library(sf)
library(stringr)
#setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos')
#creem una llista amb tots els shapefiles de dir
dir <- "C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos"
ff <- list.files(dir, pattern="\\.shp$", full.names=TRUE)
# print(ff)
# #creem un loop que carrega tots els shapes de ff i si són 'ben' els afegeix a un vector
# origins <- 1
# i <- 1
# for (shp in ff){
#   #carreguem el shape
#   object <- st_read(shp)
#   #creem un camp únic numèric
#   object$id <- c(1:nrow(object))
#   #arreglem el nom de shp i l'assignem a l'objecte
#   shapefile <- shp
#   shapefile <- gsub(dir,"",shapefile)
#   shapefile <- gsub("/","",shapefile)
#   shapefile <- gsub(".shp","",shapefile)
#   shapefile <- gsub("`","",shapefile)
#   assign(shapefile, object)
#   #si el shp és de beneficiaris, l'afegim a un vector
#   if (grepl('ben',shapefile)){
#     origins[i] <- shapefile
#     i <- i+1
#   }
# }
#Executem un loop on es carreguen els shapes i es fan els càlculs de dos en dos
for (shp in ff){
#carreguem el shape si és ben i creem id
if (grepl('ben',shapefile)){
origin <- st_read(shp)
origin$id <- c(1:nrow(origin))
}
#carreguem el shape si és sum i creem id
if (grepl('sum',shapefile)){
hub <- st_read(shp)
hub$id <- c(1:nrow(hub))
}
#calculem hubname i l'afegim a origin
hubname <- st_nearest_feature(origin,hub)
origin$hubname <- hubname
#calculem les distàncies
dist_matrix <- st_distance(origin,hub, by_element=FALSE)
#recuperem el valor mínim de cada filera i el guardem a origin
dist <- 1
for (i in 1:nrow(dist_matrix)){
dist[i] <- min(dist_matrix[i,])
}
origin$dist <- dist
#arreglem el nom de shp i l'assignem a origin
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, origin)
}
library(sf)
library(stringr)
#setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos')
#creem una llista amb tots els shapefiles de dir
dir <- "C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos"
ff <- list.files(dir, pattern="\\.shp$", full.names=TRUE)
# print(ff)
# #creem un loop que carrega tots els shapes de ff i si són 'ben' els afegeix a un vector
# origins <- 1
# i <- 1
# for (shp in ff){
#   #carreguem el shape
#   object <- st_read(shp)
#   #creem un camp únic numèric
#   object$id <- c(1:nrow(object))
#   #arreglem el nom de shp i l'assignem a l'objecte
#   shapefile <- shp
#   shapefile <- gsub(dir,"",shapefile)
#   shapefile <- gsub("/","",shapefile)
#   shapefile <- gsub(".shp","",shapefile)
#   shapefile <- gsub("`","",shapefile)
#   assign(shapefile, object)
#   #si el shp és de beneficiaris, l'afegim a un vector
#   if (grepl('ben',shapefile)){
#     origins[i] <- shapefile
#     i <- i+1
#   }
# }
#Executem un loop on es carreguen els shapes i es fan els càlculs de dos en dos
for (shp in ff){
#carreguem el shape si és ben i creem id
if (grepl('ben',shp)){
origin <- st_read(shp)
origin$id <- c(1:nrow(origin))
}
#carreguem el shape si és sum i creem id
if (grepl('sum',shp)){
hub <- st_read(shp)
hub$id <- c(1:nrow(hub))
}
#calculem hubname i l'afegim a origin
hubname <- st_nearest_feature(origin,hub)
origin$hubname <- hubname
#calculem les distàncies
dist_matrix <- st_distance(origin,hub, by_element=FALSE)
#recuperem el valor mínim de cada filera i el guardem a origin
dist <- 1
for (i in 1:nrow(dist_matrix)){
dist[i] <- min(dist_matrix[i,])
}
origin$dist <- dist
#arreglem el nom de shp i l'assignem a origin
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, origin)
}
library(sf)
library(stringr)
#setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos')
#creem una llista amb tots els shapefiles de dir
dir <- "C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos"
ff <- list.files(dir, pattern="\\.shp$", full.names=TRUE)
# print(ff)
# #creem un loop que carrega tots els shapes de ff i si són 'ben' els afegeix a un vector
# origins <- 1
# i <- 1
# for (shp in ff){
#   #carreguem el shape
#   object <- st_read(shp)
#   #creem un camp únic numèric
#   object$id <- c(1:nrow(object))
#   #arreglem el nom de shp i l'assignem a l'objecte
#   shapefile <- shp
#   shapefile <- gsub(dir,"",shapefile)
#   shapefile <- gsub("/","",shapefile)
#   shapefile <- gsub(".shp","",shapefile)
#   shapefile <- gsub("`","",shapefile)
#   assign(shapefile, object)
#   #si el shp és de beneficiaris, l'afegim a un vector
#   if (grepl('ben',shapefile)){
#     origins[i] <- shapefile
#     i <- i+1
#   }
# }
#Executem un loop on es carreguen els shapes i es fan els càlculs de dos en dos
for (shp in ff){
#carreguem el shape si és ben i creem id
if (grepl('ben',shp)){
origin <- st_read(shp)
origin$id <- c(1:nrow(origin))
}
#carreguem el shape si és sum i creem id
else if (grepl('sum',shp)){
hub <- st_read(shp)
hub$id <- c(1:nrow(hub))
}
#calculem hubname i l'afegim a origin
hubname <- st_nearest_feature(origin,hub)
origin$hubname <- hubname
#calculem les distàncies
dist_matrix <- st_distance(origin,hub, by_element=FALSE)
#recuperem el valor mínim de cada filera i el guardem a origin
dist <- 1
for (i in 1:nrow(dist_matrix)){
dist[i] <- min(dist_matrix[i,])
}
origin$dist <- dist
#arreglem el nom de shp i l'assignem a origin
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, origin)
}
print(ff)
print(ff)
library(sf)
library(stringr)
#setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos')
#creem una llista amb tots els shapefiles de dir
dir <- "C:/Users/jpueyo/OneDrive - ICRA/Water ES/puntos/shp_puntos_Muga_divididos"
ff <- list.files(dir, pattern="\\.shp$", full.names=TRUE)
# print(ff)
# #creem un loop que carrega tots els shapes de ff i si són 'ben' els afegeix a un vector
# origins <- 1
# i <- 1
# for (shp in ff){
#   #carreguem el shape
#   object <- st_read(shp)
#   #creem un camp únic numèric
#   object$id <- c(1:nrow(object))
#   #arreglem el nom de shp i l'assignem a l'objecte
#   shapefile <- shp
#   shapefile <- gsub(dir,"",shapefile)
#   shapefile <- gsub("/","",shapefile)
#   shapefile <- gsub(".shp","",shapefile)
#   shapefile <- gsub("`","",shapefile)
#   assign(shapefile, object)
#   #si el shp és de beneficiaris, l'afegim a un vector
#   if (grepl('ben',shapefile)){
#     origins[i] <- shapefile
#     i <- i+1
#   }
# }
#Executem un loop on es carreguen els shapes i es fan els càlculs de dos en dos
for (shp in ff){
#carreguem el shape si és sum i creem id
if (grepl('sum',shp)){
hub <- st_read(shp)
hub$id <- c(1:nrow(hub))
}
#carreguem el shape si és ben i creem id
if (grepl('ben',shp)){
origin <- st_read(shp)
origin$id <- c(1:nrow(origin))
}
#calculem hubname i l'afegim a origin
hubname <- st_nearest_feature(origin,hub)
origin$hubname <- hubname
#calculem les distàncies
dist_matrix <- st_distance(origin,hub, by_element=FALSE)
#recuperem el valor mínim de cada filera i el guardem a origin
dist <- 1
for (i in 1:nrow(dist_matrix)){
dist[i] <- min(dist_matrix[i,])
}
origin$dist <- dist
#arreglem el nom de shp i l'assignem a origin
shapefile <- shp
shapefile <- gsub(dir,"",shapefile)
shapefile <- gsub("/","",shapefile)
shapefile <- gsub(".shp","",shapefile)
shapefile <- gsub("`","",shapefile)
assign(shapefile, origin)
}
remotes::install_github("michaeldorman/nngeo")
install_github("michaeldorman/nngeo")
install.packages('remotes')
remotes::install_github("michaeldorman/nngeo")
library(nngeo)
library(nngeo)
remotes::install_github("michaeldorman/nngeo")
library(nngeo)
remotes::install_github("michaeldorman/nngeo")
rm(Rcpp)
remove.packages('Rcpp')
remove.packages(Rcpp)
remove.packages('Rcpp')
#install if necessary
#install.packages('remotes')
remotes::install_github("michaeldorman/nngeo")
library(nngeo)
install.packages("nngeo")
install.packages("nngeo")
library(nngeo)
#install if necessary
#install.packages('remotes')
remotes::install_github("michaeldorman/nngeo")
library(nngeo)
hubname <- st_nearest_feature(ben,sum)
ben$hubname <- hubname
origin$dist = st_distance(origin, hub[hubname, ], by_element = TRUE)
origin$az = st_azimuth(origin, hub[hubname, ])
remove.packages('nngeo')
#install if necessary
#install.packages('remotes')
remotes::install_github("michaeldorman/nngeo")
library(nngeo)
#install if necessary
install.packages('remotes')
install.packages("remotes")
#install if necessary
#install.packages('remotes')
remotes::install_github("michaeldorman/nngeo")
library(fitdistrplus)
library(rsq)
setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES')
dist <- read.csv('hubdistance_z.csv')
dist$z_diff <- dist$z_diff * -1
#comprovem com encaixen les dades en una distribució gamma
fit.gamma <- fitdist(dist$dist, distr = "gamma", method = "mme")
plot(fit.gamma)
#convertim els 0 a 10^-6 sumant 10
dist$dist <- dist$dist + 10^-6
#calculem el glm i l'avaluem
glm.dist <- glm(dist ~ categoria + depend + az + z_diff + z,
data=dist, family = Gamma())
summary(glm.dist)
plot(glm.dist)
with(summary(glm.dist), 1 - deviance/null.deviance)
rsq(glm.dist, adj=TRUE)
library(fitdistrplus)
library(rsq)
setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/csv depurados')
dist <- read.csv('hubdistance_z.csv')
dist$z_diff <- dist$z_diff * -1
#comprovem com encaixen les dades en una distribució gamma
fit.gamma <- fitdist(dist$dist, distr = "gamma", method = "mme")
plot(fit.gamma)
#convertim els 0 a 10^-6 sumant 10
dist$dist <- dist$dist + 10^-6
#calculem el glm i l'avaluem
glm.dist <- glm(dist ~ categoria + depend + az + z_diff + z,
data=dist, family = Gamma())
summary(glm.dist)
plot(glm.dist)
library(fitdistrplus)
library(rsq)
setwd('C:/Users/jpueyo/OneDrive - ICRA/Water ES/csv depurados')
dist <- read.csv('hubdistance_z.csv')
dist$z_diff <- dist$z_diff * -1
#comprovem com encaixen les dades en una distribució gamma
fit.gamma <- fitdist(dist$dist, distr = "gamma", method = "mme")
plot(fit.gamma)
#convertim els 0 a 10^-6 sumant 10
dist$dist <- dist$dist + 10^-6
#calculem el glm i l'avaluem
glm.dist <- glm(dist ~ categoria + depend + az + z_diff + z,
data=dist, family = Gamma())
summary(glm.dist)
with(summary(glm.dist), 1 - deviance/null.deviance)
rsq(glm.dist, adj=TRUE)
plot(glm.dist)
